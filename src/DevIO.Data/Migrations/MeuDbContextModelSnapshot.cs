// <auto-generated />
using System;
using DevIO.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevIO.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DevIO.Business.Models.Corrida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHoraChegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("IdMotoristaPrimeiro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMotoristaSegundo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoViagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdMotoristaPrimeiro");

                    b.HasIndex("IdMotoristaSegundo");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Corridas");
                });

            modelBuilder.Entity("DevIO.Business.Models.Motorista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Motoristas", (string)null);
                });

            modelBuilder.Entity("DevIO.Business.Models.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos", (string)null);
                });

            modelBuilder.Entity("DevIO.Business.Models.Corrida", b =>
                {
                    b.HasOne("DevIO.Business.Models.Motorista", "PrimeiroMotorista")
                        .WithMany("CorridasPrimeiroMotorista")
                        .HasForeignKey("IdMotoristaPrimeiro");

                    b.HasOne("DevIO.Business.Models.Motorista", "SegundoMotorista")
                        .WithMany("CorridasSegundoMotorista")
                        .HasForeignKey("IdMotoristaSegundo");

                    b.HasOne("DevIO.Business.Models.Veiculo", "Veiculo")
                        .WithMany("Corridas")
                        .HasForeignKey("VeiculoId")
                        .IsRequired();

                    b.Navigation("PrimeiroMotorista");

                    b.Navigation("SegundoMotorista");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("DevIO.Business.Models.Motorista", b =>
                {
                    b.Navigation("CorridasPrimeiroMotorista");

                    b.Navigation("CorridasSegundoMotorista");
                });

            modelBuilder.Entity("DevIO.Business.Models.Veiculo", b =>
                {
                    b.Navigation("Corridas");
                });
#pragma warning restore 612, 618
        }
    }
}
